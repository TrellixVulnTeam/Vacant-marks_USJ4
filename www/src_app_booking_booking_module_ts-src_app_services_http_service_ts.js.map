{"version":3,"sources":["./src/app/booking/booking-routing.module.ts","./src/app/booking/booking.module.ts","./src/app/services/http.service.ts"],"names":[],"mappings":"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","file":"src_app_booking_booking_module_ts-src_app_services_http_service_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { BookingPage } from './booking.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BookingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookingPageRoutingModule } from './booking-routing.module';\n\nimport { BookingPage } from './booking.page';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BookingPageRoutingModule,\n  ],\n  declarations: [BookingPage],\n  providers:[FormGroup,FormBuilder]\n})\nexport class BookingPageModule {}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Component, Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { environment } from '../../environments/environment';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n  \n  get(serviceName: string,params:HttpParams) {\n    let headers = new HttpHeaders();\n    headers.append('Access-Control-Allow-Origin', '*');\n    // headers.append('Access-Control-Allow-Headers', 'Content-Type');\n    // headers.append('Access-Control-Allow-Methods', 'GET');\n    headers.append('Content-Type', 'application/json');\n    //headers.append(\"Accept\", 'application/json');\n    //headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n    // headers = headers.append(\"Authorization\", \"bearer \" + token);\n    const url = environment.apiUrl + serviceName;\n    const options = { headers: headers, withCredintials: false };\n    return this.http.get(url,{headers:headers,params:params});\n  }\n\n  getData<data>(serviceName: string,params:HttpParams,token:any) {\n    let headers = new HttpHeaders();\n    //headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    headers = headers.append(\"Authorization\", \"bearer \" + token);\n    const url = environment.apiUrl + serviceName;\n    const options = { headers: headers, withCredintials: false };\n    \n    return this.http.get<data>(url,{headers:headers,params:params});\n\n  }\n\n  post(serviceName: string, data: any) {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Content-Type\", \"application/json\");\n    const options = { headers: headers, withCredintials: false };\n    const url = environment.apiUrl + serviceName;\n\n    return this.http.post(url, JSON.stringify(data), options);\n  }\n  // post(serviceName: string ,params:HttpParams,token:any, data: any) {\n  //   let headers = new HttpHeaders();\n  //   headers = headers.append(\"Content-Type\", \"application/json\");\n  //   headers = headers.append(\"Authorization\", \"bearer \" + token);\n  //   const url = environment.apiUrl + serviceName;\n  //   const options = { headers: headers, withCredintials: false };\n  //   return this.http.post(url,JSON.stringify(data),{headers:headers,params:params});\n  // }\n  getUserDetail(serviceName: string, data: any) {\n    let headers = new HttpHeaders();\n    headers = headers.append(\"Content-Type\", \"application/json\");\n    const options = { headers: headers, withCredintials: false };\n    const url = environment.apiUrl + serviceName;\n    let json = \"username=\" + data.username + \"&password=\" + data.password;\n    return this.http.post(url, JSON.stringify(data), options);\n  }\n}\n"],"sourceRoot":"webpack:///"}